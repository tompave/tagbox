{"name":"tagbox","tagline":"A simple jQuery plugin to painlessly create input boxes for tag lists like the ones used on StackOverflow or Linkedin.","body":"#tagbox\r\n\r\nA simple jQuery plugin to painlessly create input boxes for tag lists like the ones used on StackOverflow or Linkedin.  \r\n__jQueryUI is NOT required!__  \r\n\r\n![example screenshot](https://raw.github.com/tompave/tagbox/master/pics/screenshot.png)\r\n\r\n##Demo\r\nA demo with live HTML preview is available [here](http://staticfiles.wonderingmachine.com/portfolio/tagbox/example.html).\r\n\r\n##How To\r\n\r\n###What you'll need\r\n\r\nJust import jQuery (either `1.10` or `2.0`), the plugin javascript file and the related stylesheet (a default CSS file is inlcuded).   \r\n\r\n```html\r\n<head>\r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style/layout.css\"> <!-- your general CSS -->\r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"style/tag_box.css\"> <!-- tagbox related CSS -->\r\n\r\n  <script type=\"text/javascript\" src=\"scripts/jquery-2.0.3.min.js\"></script>\r\n  <script type=\"text/javascript\" src=\"scripts/tagbox.min.js\"></script> <!-- the plugin -->\r\n  <script type=\"text/javascript\" src=\"scripts/logic.js\"></script> <!-- your custom script -->\r\n</head>\r\n```\r\n\r\n(of course, you can package and minify everything in a single file)\r\n\r\n\r\n\r\nTo use the plugin, you'll need a `<form>` containing the `<div>` you plan to use as the tag input.\r\n\r\n```html\r\n<form id=\"the_parent_form\" accept-charset=\"UTF-8\" action=\"/form_action\" method=\"post\">\r\n  <!-- other inputs and elements... -->\r\n  <div id=\"tag_box\"></div>\r\n  <!-- other inputs and elements... -->\r\n</form>\r\n```\r\n\r\n###Trigger the plugin\r\n\r\nOnce you have setup your `<form>` and your `<div>`, you can just call:\r\n\r\n```javascript\r\n$(\"#tag_box\").tagbox();\r\n```\r\n\r\nThe result will be:\r\n\r\n```html\r\n<form id=\"the_parent_form\" accept-charset=\"UTF-8\" action=\"/form_action\" method=\"post\">\r\n  <!-- other inputs and elements... -->\r\n  <div id=\"tag_box\">\r\n    <div class=\"tag_element\">\r\n      <span class=\"tag_label\">example</span>\r\n      <a href=\"#\" title=\"remove\" class=\"tag_dismiss\">&times;</a>\r\n    </div>\r\n      \r\n    <input name=\"type_target\" id=\"type_target\" type=\"text\" maxlength=\"40\">\r\n  </div>\r\n  <!-- other inputs and elements... -->\r\n</form>\r\n```\r\n\r\n\r\n\r\n###Options\r\n\r\nYou can pass the function an optional object with some configuration values. Here are the defaults:\r\n\r\n```javascript\r\n$(\"#tag_box\").tagbox({\r\n  typeTargetNameAndId : \"type_target\",\r\n  tagInputsArrayName : \"tag_list\",\r\n  includeExampleTag : true\r\n});\r\n```\r\n\r\n\r\n###Style\r\n\r\nThe plugin comes with a default stylesheet for the tag widget (SCSS).  \r\nOf course you can use your own.\r\n\r\n\r\n##How it works\r\n\r\nThe plugin listens for keypress events and reacts on `enter`, `,`, `space` or `tab`.  \r\nWhen one of these keys is pressed, it creates a new graphical _tag\\_element_ in the tag box, and inserts in the form a new hidden input for the new inserted value. The hidden inputs have a collective name (can be configured) and will be received by the server as an array of values.  \r\nRemoving a graphical _tag\\_element_ also removes the corresponding hidden input.  \r\n\r\n\r\n##Contribute\r\n\r\nWith this plugin I wanted to keep things simple, but I'd like to hear suggestions about features and configuration options.  \r\nIf you want you can send me a pull request:\r\n\r\n* fork on GitHub\r\n* `git clone` your fork on your computer\r\n* `git checkout -b your_new_feature_branch`\r\n* implement your modifications\r\n* `git add .` and `git commit`\r\n* `git push`\r\n* create a pull request on GitHub\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}